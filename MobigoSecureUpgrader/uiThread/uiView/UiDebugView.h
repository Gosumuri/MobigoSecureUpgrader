
// MobigoSecureUpgraderView.h : CUiDebugView 클래스의 인터페이스
//

#pragma once

////////////////////////////////////////////////////////////////////////////////
// include
////////////////////////////////////////////////////////////////////////////////

#include "UiDoc.h"
#include "UiSplashView.h"

////////////////////////////////////////////////////////////////////////////////
// define
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
// macro
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
// class declare
////////////////////////////////////////////////////////////////////////////////

class CUiDebugView : public CView, public CUiSplashView
{
protected: // serialization에서만 만들어집니다.
	CUiDebugView();
	DECLARE_DYNCREATE(CUiDebugView)

// 특성입니다.
public:
	CUiDoc* GetDocument() const;

// 작업입니다.
public:

// 재정의입니다.
public:
	virtual void OnDraw(CDC* pDC);  // 이 뷰를 그리기 위해 재정의되었습니다.
	virtual BOOL PreCreateWindow(CREATESTRUCT& cs);
protected:

// 구현입니다.
public:
	virtual ~CUiDebugView();
#ifdef _DEBUG
	virtual void AssertValid() const;
	virtual void Dump(CDumpContext& dc) const;
#endif

protected:

// 생성된 메시지 맵 함수
protected:
    afx_msg void        OnWindowPosChanging( WINDOWPOS* lpwndpos );
    afx_msg void        OnTimer( UINT_PTR nIDEvent );
	DECLARE_MESSAGE_MAP()

////////////////////////////////////////////////////////////////////////////////
// member data
////////////////////////////////////////////////////////////////////////////////

private:  

////////////////////////////////////////////////////////////////////////////////
// member function
////////////////////////////////////////////////////////////////////////////////

public:

};

#ifndef _DEBUG  // MobigoSecureUpgraderView.cpp의 디버그 버전
inline CUiDoc* CUiDebugView::GetDocument() const
   { return reinterpret_cast<CUiDoc*>(m_pDocument); }
#endif

